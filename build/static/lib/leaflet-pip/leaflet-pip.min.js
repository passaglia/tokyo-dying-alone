!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n;n="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,n.leafletPip=t()}}(function(){return function t(n,o,e){function r(i,s){if(!o[i]){if(!n[i]){var u="function"==typeof require&&require;if(!s&&u)return u(i,!0);if(a)return a(i,!0);var c=new Error("Cannot find module '"+i+"'");throw c.code="MODULE_NOT_FOUND",c}var f=o[i]={exports:{}};n[i][0].call(f.exports,function(t){var o=n[i][1][t];return r(o?o:t)},f,f.exports,t,n,o,e)}return o[i].exports}for(var a="function"==typeof require&&require,i=0;i<e.length;i++)r(e[i]);return r}({1:[function(t,n,o){"use strict";function e(t){return t.feature&&t.feature.geometry&&t.feature.geometry.type&&["Polygon","MultiPolygon"].indexOf(t.feature.geometry.type)!==-1}var r=t("geojson-utils"),a={bassackwards:!1,pointInLayer:function(t,n,o){"number"==typeof t.lat?t=[t.lng,t.lat]:a.bassackwards&&(t=t.concat().reverse());var i=[];return n.eachLayer(function(n){o&&i.length||e(n)&&r.pointInPolygon({type:"Point",coordinates:t},n.toGeoJSON().geometry)&&i.push(n)}),i}};n.exports=a},{"geojson-utils":2}],2:[function(t,n,o){!function(){function t(t){for(var n=[],o=[],e=0;e<t[0].length;e++)n.push(t[0][e][1]),o.push(t[0][e][0]);return n=n.sort(function(t,n){return t-n}),o=o.sort(function(t,n){return t-n}),[[n[0],o[0]],[n[n.length-1],o[o.length-1]]]}function o(t,n,o){for(var e=[[0,0]],r=0;r<o.length;r++){for(var a=0;a<o[r].length;a++)e.push(o[r][a]);e.push(o[r][0]),e.push([0,0])}for(var i=!1,r=0,a=e.length-1;r<e.length;a=r++)e[r][0]>n!=e[a][0]>n&&t<(e[a][1]-e[r][1])*(n-e[r][0])/(e[a][0]-e[r][0])+e[r][1]&&(i=!i);return i}var e=this.gju={};"undefined"!=typeof n&&n.exports&&(n.exports=e),e.lineStringsIntersect=function(t,n){for(var o=[],e=0;e<=t.coordinates.length-2;++e)for(var r=0;r<=n.coordinates.length-2;++r){var a={x:t.coordinates[e][1],y:t.coordinates[e][0]},i={x:t.coordinates[e+1][1],y:t.coordinates[e+1][0]},s={x:n.coordinates[r][1],y:n.coordinates[r][0]},u={x:n.coordinates[r+1][1],y:n.coordinates[r+1][0]},c=(u.x-s.x)*(a.y-s.y)-(u.y-s.y)*(a.x-s.x),f=(i.x-a.x)*(a.y-s.y)-(i.y-a.y)*(a.x-s.x),h=(u.y-s.y)*(i.x-a.x)-(u.x-s.x)*(i.y-a.y);if(0!=h){var d=c/h,l=f/h;0<=d&&d<=1&&0<=l&&l<=1&&o.push({type:"Point",coordinates:[a.x+d*(i.x-a.x),a.y+d*(i.y-a.y)]})}}return 0==o.length&&(o=!1),o},e.pointInBoundingBox=function(t,n){return!(t.coordinates[1]<n[0][0]||t.coordinates[1]>n[1][0]||t.coordinates[0]<n[0][1]||t.coordinates[0]>n[1][1])},e.pointInPolygon=function(n,r){for(var a="Polygon"==r.type?[r.coordinates]:r.coordinates,i=!1,s=0;s<a.length;s++)e.pointInBoundingBox(n,t(a[s]))&&(i=!0);if(!i)return!1;for(var u=!1,s=0;s<a.length;s++)o(n.coordinates[1],n.coordinates[0],a[s])&&(u=!0);return u},e.pointInMultiPolygon=function(n,r){for(var a="MultiPolygon"==r.type?[r.coordinates]:r.coordinates,i=!1,s=!1,u=0;u<a.length;u++){for(var c=a[u],f=0;f<c.length;f++)i||e.pointInBoundingBox(n,t(c[f]))&&(i=!0);if(!i)return!1;for(var f=0;f<c.length;f++)s||o(n.coordinates[1],n.coordinates[0],c[f])&&(s=!0)}return s},e.numberToRadius=function(t){return t*Math.PI/180},e.numberToDegree=function(t){return 180*t/Math.PI},e.drawCircle=function(t,n,o){for(var r=[n.coordinates[1],n.coordinates[0]],a=t/1e3/6371,i=[e.numberToRadius(r[0]),e.numberToRadius(r[1])],o=o||15,s=[[r[0],r[1]]],u=0;u<o;u++){var c=2*Math.PI*u/o,f=Math.asin(Math.sin(i[0])*Math.cos(a)+Math.cos(i[0])*Math.sin(a)*Math.cos(c)),h=i[1]+Math.atan2(Math.sin(c)*Math.sin(a)*Math.cos(i[0]),Math.cos(a)-Math.sin(i[0])*Math.sin(f));s[u]=[],s[u][1]=e.numberToDegree(f),s[u][0]=e.numberToDegree(h)}return{type:"Polygon",coordinates:[s]}},e.rectangleCentroid=function(t){var n=t.coordinates[0],o=n[0][0],e=n[0][1],r=n[2][0],a=n[2][1],i=r-o,s=a-e;return{type:"Point",coordinates:[o+i/2,e+s/2]}},e.pointDistance=function(t,n){var o=t.coordinates[0],r=t.coordinates[1],a=n.coordinates[0],i=n.coordinates[1],s=e.numberToRadius(i-r),u=e.numberToRadius(a-o),c=Math.pow(Math.sin(s/2),2)+Math.cos(e.numberToRadius(r))*Math.cos(e.numberToRadius(i))*Math.pow(Math.sin(u/2),2),f=2*Math.atan2(Math.sqrt(c),Math.sqrt(1-c));return 6371*f*1e3},e.geometryWithinRadius=function(t,n,o){if("Point"==t.type)return e.pointDistance(t,n)<=o;if("LineString"==t.type||"Polygon"==t.type){var r,a={};r="Polygon"==t.type?t.coordinates[0]:t.coordinates;for(var i in r)if(a.coordinates=r[i],e.pointDistance(a,n)>o)return!1}return!0},e.area=function(t){for(var n,o,e=0,r=t.coordinates[0],a=r.length-1,i=0;i<r.length;a=i++){var n={x:r[i][1],y:r[i][0]},o={x:r[a][1],y:r[a][0]};e+=n.x*o.y,e-=n.y*o.x}return e/=2},e.centroid=function(t){for(var n,o,r,a=0,i=0,s=t.coordinates[0],u=s.length-1,c=0;c<s.length;u=c++){var o={x:s[c][1],y:s[c][0]},r={x:s[u][1],y:s[u][0]};n=o.x*r.y-r.x*o.y,a+=(o.x+r.x)*n,i+=(o.y+r.y)*n}return n=6*e.area(t),{type:"Point",coordinates:[i/n,a/n]}},e.simplify=function(t,n){n=n||20,t=t.map(function(t){return{lng:t.coordinates[0],lat:t.coordinates[1]}});var o,e,r,a,i,s,u,c,f,h,d,l,y,g,p,M,x,v,m,b=Math.PI/180*.5,P=new Array,I=new Array,T=new Array;if(t.length<3)return t;for(o=t.length,h=360*n/(2*Math.PI*6378137),h*=h,r=0,I[0]=0,T[0]=o-1,e=1;e>0;)if(a=I[e-1],i=T[e-1],e--,i-a>1){for(d=t[i].lng()-t[a].lng(),l=t[i].lat()-t[a].lat(),Math.abs(d)>180&&(d=360-Math.abs(d)),d*=Math.cos(b*(t[i].lat()+t[a].lat())),y=d*d+l*l,s=a+1,u=a,f=-1;s<i;s++)g=t[s].lng()-t[a].lng(),p=t[s].lat()-t[a].lat(),Math.abs(g)>180&&(g=360-Math.abs(g)),g*=Math.cos(b*(t[s].lat()+t[a].lat())),M=g*g+p*p,x=t[s].lng()-t[i].lng(),v=t[s].lat()-t[i].lat(),Math.abs(x)>180&&(x=360-Math.abs(x)),x*=Math.cos(b*(t[s].lat()+t[i].lat())),m=x*x+v*v,c=M>=y+m?m:m>=y+M?M:(g*l-p*d)*(g*l-p*d)/y,c>f&&(u=s,f=c);f<h?(P[r]=a,r++):(e++,I[e-1]=u,T[e-1]=i,e++,I[e-1]=a,T[e-1]=u)}else P[r]=a,r++;P[r]=o-1,r++;for(var w=new Array,s=0;s<r;s++)w.push(t[P[s]]);return w.map(function(t){return{type:"Point",coordinates:[t.lng,t.lat]}})},e.destinationPoint=function(t,n,o){o/=6371,n=e.numberToRadius(n);var r=e.numberToRadius(t.coordinates[0]),a=e.numberToRadius(t.coordinates[1]),i=Math.asin(Math.sin(a)*Math.cos(o)+Math.cos(a)*Math.sin(o)*Math.cos(n)),s=r+Math.atan2(Math.sin(n)*Math.sin(o)*Math.cos(a),Math.cos(o)-Math.sin(a)*Math.sin(i));return s=(s+3*Math.PI)%(2*Math.PI)-Math.PI,{type:"Point",coordinates:[e.numberToDegree(s),e.numberToDegree(i)]}}}()},{}]},{},[1])(1)});
